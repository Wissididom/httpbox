name: Rust

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: http-box-ubuntu-${{ matrix.rust }}
        path: target

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4
    - uses: superfly/flyctl-actions/setup-flyctl@master
    - name: Deploy to Fly
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      run: flyctl deploy --remote-only

  create-release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # allows for tags access
    - uses: actions/download-artifact@v4
      name: Download for Ubuntu
      with:
        name: http-box-ubuntu
        path: release-artifacts/
    - name: Create release
      uses: ncipollo/release-action@1.13.0
      with:
        replacesArtifacts: true
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: "release-artifacts/*"
        body: ${{ github.event.head_commit.message }}
        prerelease: true
        name: Nightly Release
        tag: nightly-build
    - name: Update nightly-build tag
      run: |
        git tag -f nightly-build
        git push -f origin nightly-build
